version: "3"

services:
  api:
    container_name: api
    build:
        context: .
        dockerfile: async_api/Dockerfile
    ports:
      - "8000"
    volumes:
      - ./async_api:/data/async_api
    env_file:
      - ./async_api/.env
      - ./elasticsearch/.env
      - ./.env
    depends_on:
      - elasticsearch
      - redis
    networks:
      - int_net

  ugc_api:
    container_name: ugc_api
    build:
      context: .
      dockerfile: ugc_api/Dockerfile
    ports:
      - "8000"
    volumes:
      - ./ugc_api/src:/data/ugc_api
      - .deploy/logging.conf:/data/ugc_api/logging.conf
      - ~/logs/ugc_api:/tmp
    env_file:
      - ./ugc_api/.env
      - ./.env
    networks:
      - int_net
      - ext_net

  ugc_etl:
    container_name: ugc_etl
    build:
      context: .
      dockerfile: ugc_etl/Dockerfile
    env_file:
      - ./ugc_etl/.env.compose
    networks:
      - int_net

  auth_api:
    container_name: auth_api
    build:
      context: .
      dockerfile: auth_api/Dockerfile
    ports:
      - "5000"
    env_file:
      - ./auth_api/.env.docker-compose
      - ./.env
    depends_on:
      - auth_postgres
      - redis
    networks:
      - int_net

  admin_panel:
    container_name: admin_panel
    build:
      context: .
      dockerfile: admin/Dockerfile
    ports:
      - "80"
    env_file:
      - ./admin/.env.docker-compose
      - ./.env
    depends_on:
      - data_postgres
      - redis
    networks:
      - int_net

  data_postgres:
    image: postgres:13
    container_name: data_postgres
    ports:
      - "5432"
    volumes:
      - ${HOME}/postgresql/data:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - int_net

  auth_postgres:
    image: postgres:13
    container_name: auth_postgres
    ports:
      - "5432"
    volumes:
      - ${HOME}/postgresql/auth_data:/var/lib/postgresql/data
    env_file:
      - ./auth_postgres/.env
    networks:
      - int_net

  elasticsearch:
    image: elasticsearch:7.7.0
    container_name: elasticsearch
    ports:
      - "9200"
      - "9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    env_file:
      - ./elasticsearch/.env
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
    networks:
      - int_net

  redis:
    image: redis:7.0.0
    container_name: redis
    entrypoint: redis-server
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379"
    volumes:
      - $HOME/redis/data:/data
    networks:
      - int_net

  nginx:
    image: nginx:1.19.2
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - ~/logs/nginx:/var/log/nginx
    depends_on:
      - api
    links:
      - api
    networks:
      - ext_net
      - int_net

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    depends_on:
      - auth_api
    networks:
      - ext_net
      - int_net

  # ELK
  elk-logstash:
    container_name: elk-logstash
    image: logstash:7.10.1
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ES_HOST: "elk-elasticsearch:9200"
    ports:
      - "5044:5044/udp"
      - "5045:5045"
    depends_on:
      - elk-elasticsearch
    volumes:
      - .deploy/logstash.conf:/config/logstash.conf:ro
    command: logstash -f /config/logstash.conf
    networks:
      - int_net

  elk-elasticsearch:
    container_name: elk_logstash
    image: elasticsearch:7.17.6
    environment:
      # Указываем ES запуститься в одном экземпляре
      discovery.type: single-node
    ports:
      - "9200:9200"
    deploy:
      resources:
        limits:
          memory: 2000M
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data
    networks:
      - ext_net
      - int_net

  elk-kibana:
    container_name: elk-kibana
    image: kibana:7.17.6
    environment:
      ELASTICSEARCH_HOSTS: "http://elk-elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - ext_net
      - int_net

  elk-filebeat:
    container_name: elk-filebeat
    image: elastic/filebeat:8.4.1
    volumes:
      - .deploy/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ~/logs/nginx:/var/log/nginx:ro
      - ~/logs/ugc_api:/var/log/ugc_api:ro
    depends_on:
      - nginx
      - elk-logstash
      - elk-elasticsearch
      - elk-kibana
    links:
      - elk-logstash
    networks:
      - int_net

volumes:
  esdata:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${HOME}/elasticsearch/data

networks:
  ext_net:
  int_net:
    internal: true
